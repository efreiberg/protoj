package dev.freemountain.protoj.serialize.integration;

import static dev.freemountain.protoj.serialize.TestUtil.printBits;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import com.google.common.io.Resources;
import dev.freemountain.protoj.serialize.ProtobufSerializer;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ProtocSerializationCompareTest {

    private final static Logger logger = LoggerFactory.getLogger(ProtocSerializationCompareTest.class);

    /**
     * Compares generated bytes to what protoc generates for the same values.  Types and values for IntegrationTestProto
     * must match up with what is set in protoc-it.proto and protoc-it-values.txt, respectively.
     * <p>
     * In order to generate a new protoc output for use in this test, run the following:
     * <p>
     * protoc --encode tester ./integration/src/test/resources/protoc-it.proto < ./integration/src/test/resources/protoc-it-values.txt
     * > ./integration/src/test/resources/protoc-it-out.bin
     */
    @Test
    public void generateAndCompareToProtoc() throws Exception {
        ByteBuffer itOut = ProtobufSerializer.serialize(new IntegrationTestProto());
        byte[] protocBytes = getProtocGeneratedBytes("protoc-it-out.bin");
        logger.debug("Generated={}", printBits(itOut.array()));
        logger.debug("Expected={}", printBits(protocBytes));
        assertTrue(Arrays.equals(itOut.array(), protocBytes));
    }

    private byte[] getProtocGeneratedBytes(String filename) {
        try {
            return Resources.toByteArray(Resources.getResource(filename));
        } catch (IOException e) {
            fail(e.getMessage());
            return null;
        }
    }

}
